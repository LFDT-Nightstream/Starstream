name: Build

on:
  push:
  pull_request:

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add wasm32-unknown-unknown
      - run: rustup component add clippy rustfmt
      # Enforce lockfile correctness.
      - run: cargo check --locked
      # Test all crates, except those that force-target WASM.
      - run: cargo test --workspace
      # Cosmetic checks.
      - run: cargo clippy
      - run: cargo fmt --check

  website:
    name: Website
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: rustup target add wasm32-unknown-unknown
      - run: sudo apt update && sudo apt install emscripten
      - name: Install wasm-bindgen
        run: |
          set -e
          curl -o wasm-bindgen.tar.gz --no-progress-meter -L https://github.com/wasm-bindgen/wasm-bindgen/releases/download/0.2.105/wasm-bindgen-0.2.105-x86_64-unknown-linux-musl.tar.gz
          echo "b391448c4926ac4b11425a6752484d85164e72489d97804461d5e868c643b88a  wasm-bindgen.tar.gz" | sha256sum -c
          tar -xf wasm-bindgen.tar.gz -C /usr/local/bin --strip-components=1
      - run: cd vscode-starstream && npm i && npx vsce package -o starstream.vsix
      - run: cd website && npm i && npm run build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./website/build
  website-deploy:
    name: GitHub Pages
    needs: website
    if: github.event_name == 'push' && github.ref_name == 'main'
    permissions:
      pages: write
      id-token: write
    concurrency:
      group: pages
      cancel-in-progress: true
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/configure-pages@v5
      - uses: actions/deploy-pages@v4
        id: deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
